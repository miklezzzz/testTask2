version: 2
jobs:
  buildAndPush:
    docker:
      - image: circleci/buildpack-deps:bionic
    steps:
      - checkout
      - setup_remote_docker:
      - run:
          name: Set the tag for the image
          command: if [ "$CIRCLE_BRANCH" == "develop" ]; then echo 'export TAG=develop' >> $BASH_ENV; elif [[ "$CIRCLE_BRANCH" != release-* ]]; then echo 'export TAG=release-$(cat VERSION)-$CIRCLE_BUILD_NUM' >> $BASH_ENV; elif [[ "$CIRCLE_TAG" == prodbuild* ]]; then echo 'export TAG=$CIRCLE_TAG-$CIRCLE_BUILD_NUM' >> $BASH_ENV; fi
      - run:
          name: Build and push images
          command: |
            docker build -t $DOCKER_USER/simple-api-php:$TAG . -f Dockerfile.php
            docker build -t $DOCKER_USER/simple-api-web:$TAG . -f Dockerfile.web
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push $DOCKER_USER/simple-api-php:$TAG
            docker push $DOCKER_USER/simple-api-web:$TAG

  deploy:
    docker:
      - image: circleci/buildpack-deps:bionic
    steps:
      - checkout
      - setup_remote_docker:
      - run:
          name: Install and confgure kubectl
          command: sudo curl -L https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl && sudo chmod +x /usr/local/bin/kubectl
      - run:
          name: Prepare kubeconfig
          command: |
            sed -i "s/east-k8s/$host/" ./.kube/config
            sed -i "s/west-k8s/$host/" ./.kube/config
            sed -i "s/admin-token/$token/" ./.kube/config
            mkdir -p ~/.kube && cp ./.kube/config ~/.kube/config
      - run: 
          name: Install Helm
          command: |
            sudo curl https://get.helm.sh/helm-v3.0.3-linux-amd64.tar.gz -o /tmp/helm-v3.0.3-linux-amd64.tar.gz && cd /tmp && tar zxvf helm-v3.0.3-linux-amd64.tar.gz && sudo cp -v ./linux-amd64/helm /usr/local/bin/helm
      - run:
          name: Set the tag for the image
          command: if [ "${CIRCLE_BRANCH}" = "develop" ]; then echo 'export TAG=develop' >> $BASH_ENV; elif [[ "${CIRCLE_BRANCH}" != release-* ]]; then echo 'export TAG=release-$(cat VERSION)-$CIRCLE_BUILD_NUM' >> $BASH_ENV; elif [[ "${CIRCLE_TAG}" == prodbuild* ]]; then echo 'export TAG=$CIRCLE_TAG-$CIRCLE_BUILD_NUM' >> $BASH_ENV; fi
      - run:
          name: Get Namespace name
          command: if [ "$TAG" == "develop" ]; then echo 'export NAMESPACE=develop' >> $BASH_ENV; elif [[ "$TAG" != prodbuild* ]]; then echo 'export NAMESPACE=$TAG' >> $BASH_ENV; else echo 'export NAMESPACE=production' >> $BASH_ENV; fi
      - run:
          name: Create Namespace
          command: kubectl config use-context kube-east && bash scripts/createNs.sh $NAMESPACE

workflows:
  version: 2
  build-deploy:
    jobs:
      - buildAndPush:
          filters:
            branches:
              ignore:
                - master
                - develop
      - deploy
